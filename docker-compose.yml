version: "3.8"

services:
  mcp-tavily:
    build: .
    image: mcp-tavily:latest
    container_name: mcp-tavily
    environment:
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8000
    restart: unless-stopped
    networks: [mcpnet]

  mcpo:
    image: ghcr.io/open-webui/mcpo:latest
    container_name: mcpo
    depends_on: [mcp-tavily]
    # Connect mcpo to our MCP (streamable-http)
    command: >
      mcpo --host 0.0.0.0 --port 8001
           --server-type "streamablehttp" --
           http://mcp-tavily:8000/mcp
    restart: unless-stopped
    networks: [mcpnet]

  nginx-auth:
    image: nginx:alpine
    container_name: nginx-auth
    depends_on: [mcpo]
    environment:
      - AUTH_TOKEN=${AUTH_TOKEN}   # <-- set in Portainer (not committed)
    ports:
      - "18000:18000"
    command: >
      /bin/sh -c '
        set -eu
        # Write template inline (no bind-mounts)
        cat > /tmp/default.conf.template << "EOF"
        server {
            listen 0.0.0.0:18000;

            resolver 127.0.0.11 ipv6=off valid=10s;

            location / {
                if ($http_authorization != "Bearer ${AUTH_TOKEN}") { return 401; }
                proxy_pass http://mcpo:8001;
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }
        }
        EOF
        mkdir -p /etc/nginx/conf.d
        # Substitute only AUTH_TOKEN (leave the rest untouched)
        envsubst "$$AUTH_TOKEN" < /tmp/default.conf.template > /etc/nginx/conf.d/default.conf
        exec nginx -g "daemon off;"
      '
    restart: unless-stopped
    networks: [mcpnet]

networks:
  mcpnet:
    driver: bridge